@model List<Product>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}



<div class="container">
    <h1>Products</h1>
    <div class="row">
        <div class="col-lg-6 col-md-6 col-sm-12 mb-4">
            <div class="form-group">
                <label for="searchString">Search:</label>
                <input type="text" class="form-control" id="searchString" name="searchString" value="@ViewBag.SearchString" placeholder="Enter keywords">
            </div>
        </div>
        <div class="col-lg-6 col-md-6 col-sm-12 mb-4">
            <div class="form-group">
                <label for="categoryFilter">Filter by Category:</label>
                <select id="categoryFilter" class="form-control">
                    <option value="">All Categories</option>
                    <option value="cat">Cat</option>
                    <option value="bird">Bird</option>
                    <option value="dog">Dog</option>
                </select>
            </div>
        </div>
    </div>
    <div class="row" id="filteredProductContainer">
        @foreach (var product in Model)
        {
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card h-100">
                    @*<img class="card-img-top" src="data:image;base64,@System.Convert.ToBase64String(@product.ImageData)" alt="@product.Title">*@
                    <img class="card-img-top" src="~/uploads/@product.ImageData" alt="@product.Title" style="width:150px; height:140px;">

                    <div class="card-body">
                        <h4 class="card-title">@product.Title</h4>
                        <h5>Price: @product.Price MMK</h5>
                        <p class="card-text">Available Stock: @product.Stock</p>
                        <p class="card-text">@Html.Raw(product.Description)</p>
                    </div>
                    <div class="card-footer">
                        <div class="input-group mb-3">
                            <input type="number" class="form-control quantity-input" min="1" max="@product.Stock" value="1">
                            <div class="input-group-append">
                                <button class="btn btn-primary add-to-cart" data-product-id="@product.Id">Add to Cart</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
       
    </div>
    <!-- Pagination and search controls -->
    <div class="card-footer d-flex justify-content-end">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                @if (ViewBag.ShowButtonCount <= 5)
                {
                    for (int i = 1; i <= ViewBag.ShowButtonCount; i++)
                    {
                        <li class="page-item @(i == ViewBag.StartIndex ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { startIndex = i, showCount = @ViewBag.ShowCount, searchString = @ViewBag.SearchString })">@i</a>
                        </li>
                    }
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { startIndex = @ViewBag.StartIndex - 1, showCount = @ViewBag.ShowCount, searchString = @ViewBag.SearchString })"> &lt; </a>
                    </li>

                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { startIndex = 1, showCount = @ViewBag.ShowCount, searchString = @ViewBag.SearchString })"> 1 </a>
                    </li>

                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { startIndex = 2, showCount = @ViewBag.ShowCount, searchString = @ViewBag.SearchString })"> 2 </a>
                    </li>

                    <li class="page-item active">
                        <a class="page-link" href="@Url.Action("Index", new { startIndex = @ViewBag.StartIndex, showCount = @ViewBag.ShowCount, searchString = @ViewBag.SearchString })"> ..@ViewBag.StartIndex.. </a>
                    </li>

                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { startIndex = @ViewBag.ShowButtonCount - 1, showCount = @ViewBag.ShowCount, searchString = @ViewBag.SearchString })"> @(ViewBag.ShowButtonCount - 1) </a>
                    </li>

                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { startIndex = @ViewBag.ShowButtonCount, showCount = @ViewBag.ShowCount, searchString = @ViewBag.SearchString })"> @ViewBag.ShowButtonCount </a>
                    </li>

                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { startIndex = @ViewBag.StartIndex + 1 <= @ViewBag.ShowButtonCount? @ViewBag.StartIndex + 1 : @ViewBag.ShowButtonCount, showCount = @ViewBag.ShowCount, searchString = @ViewBag.SearchString })"> &gt; </a>
                    </li>
                }
            </ul>
        </nav>
    </div>


</div>

<!-- Modal -->
<div class="modal fade" id="addToCartModal" tabindex="-1" role="dialog" aria-labelledby="addToCartModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addToCartModalLabel">Add to Cart</h5>
                <button type="button" class="closeModal" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="modal-message"></p>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('.add-to-cart').click(function () {
            var productId = $(this).data('product-id');
            var quantity = $(this).closest('.card-footer').find('.quantity-input').val();
            $.ajax({
                url: '/Cart/AddToCart',
                type: 'POST',
                data: { productId: productId, quantity: quantity },
                success: function (response) {
                    $('#modal-message').text(response.message);
                    $('#addToCartModal').modal('show');
                },
                error: function (xhr, status, error) {
                    var errorMessage = xhr.responseText || 'An error occurred while adding the item to cart.';
                    $('#modal-message').text(errorMessage);
                    $('#addToCartModal').modal('show');
                }
            });
        });
    });

    $(document).ready(function () {
        $('#addToCartModal').on('hidden.bs.modal', function () {
            location.reload();
        });
    });

    $('.closeModal').click(function () {
        $('#addToCartModal').modal('hide');
    });

    $(document).ready(function () {
        // Function to handle filtering
        function filterProducts() {
            var searchQuery = $('#searchString').val();
            var categoryId = $('#categoryFilter').val();

            $.ajax({
                url: '@Url.Action("Index", "Product")', // Specify the controller action URL
                type: 'GET',
                data: { startIndex: @ViewBag.StartIndex, showCount: 9, searchString: searchQuery, categor: categoryId, partial: true }, // Corrected parameter format
                success: function (data) {
                    $('#filteredProductContainer').html(data);
                    $('#categoryFilter').val(categor);
                },
                error: function (xhr, status, error) {
                    // Handle error
                    console.error(error);
                }
            });
        }

        // Call the filterProducts function when the search input or category filter changes
        $('#searchString, #categoryFilter').on('change keyup', function () {
            filterProducts();
        });
    });
</script>